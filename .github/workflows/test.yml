name: Test
on: [push]
jobs:
  test:
    strategy:
      matrix:
        ruby: [3.2]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Debug Secrets
        run: |
          if [ -n "${{ secrets.GH_ACCESS_TOKEN }}" ]; then
            echo "üéâ GH_ACCESS_TOKEN secret is available!"
          else
            echo "‚ùå GH_ACCESS_TOKEN secret is NOT available!"
            exit 1
          fi        
      - name: Checkout Rails app (phrase)
        uses: actions/checkout@v4
        with:
          repository: phrase/phrase
          path: phrase
          token: ${{ secrets.GH_ACCESS_TOKEN }}    
      - name: Install Ruby
        uses: ruby/setup-ruby@0cde4689ba33c09f1b890c1725572ad96751a3fc
        with:
          bundler-cache: true
          ruby-version: ${{ matrix.ruby }}         
      - run: bundle install
      - name: Run Tests (RSpec)
        run: bundle exec rspec spec
      - name: Fix coverage.json Paths Before Upload
        run: sed -i 's|/work/|/_work/|g' coverage/coverage.json
      - name: Upload Coverage
        uses: actions/upload-artifact@v4
        with:
          name: simple-cov-result
          path: coverage
      - name: Brakeman Scan
        run: bundle exec rake brakeman:sonarqube
        env:
          RAILS_APP_PATH: ./phrase
      - name: Upload Brakeman Result
        uses: actions/upload-artifact@v4
        with:
          name: brakeman-result
          path: sonarqube.json      
  scan:
    name: Sonarqube Scan
    needs: [test]
    runs-on: ["arc-runner-spot"] # Run Sonarqube in self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full commit history for better analysis
      - name: Download Brakeman result
        uses: actions/download-artifact@v4
        with:
          name: brakeman-result
      - name: Download SimpleCov result
        uses: actions/download-artifact@v4
        with:
          name: simple-cov-result
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}        
